const axios = require('axios');

async function testXSSVulnerability() {
  try {
    // 1. 로그인 요청
    console.log('로그인 시도...');
    const loginResponse = await axios.post('http://localhost:5000/api/auth/login', {
      email: 'test@example.com',
      password: 'testpass123'
    });
    
    if (!loginResponse.data.success) {
      console.error('로그인 실패:', loginResponse.data);
      return;
    }
    
    const token = loginResponse.data.token;
    console.log('로그인 성공, 토큰 획득:', token);
    
    // 2. XSS 테스트를 위한 게시물 작성
    console.log('XSS 테스트 게시물 작성 시도...');
    const postData = {
      title: '<script>alert("XSS in Title");</script>',
      content: '<img src="x" onerror="alert(\'XSS in Content\');">',
      tags: ['테스트', 'XSS'],
      allowHtml: true
    };
    
    const createResponse = await axios.post('http://localhost:5000/api/posts', postData, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
      }
    });
    
    console.log('게시물 작성 결과:', createResponse.data);
    
    if (createResponse.data.success) {
      const postId = createResponse.data.id;
      console.log(`생성된 게시물 ID: ${postId}`);
      console.log(`게시물 확인 URL: http://localhost:3000/posts/${postId}`);
      
      // 3. 생성된 게시물 확인
      const getResponse = await axios.get(`http://localhost:5000/api/posts/${postId}`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      console.log('생성된 게시물 데이터:', getResponse.data);
      console.log('제목에 XSS 코드 포함 여부:', getResponse.data.title.includes('<script>'));
      console.log('내용에 XSS 코드 포함 여부:', getResponse.data.content.includes('onerror'));
    }
  } catch (error) {
    if (error.response) {
      // 서버 응답이 있는 경우
      console.error('오류 응답:', error.response.status, error.response.data);
    } else if (error.request) {
      // 요청이 전송됐지만 응답이 없는 경우
      console.error('응답 없음:', error.request);
    } else {
      // 요청 설정 중 오류가 발생한 경우
      console.error('요청 오류:', error.message);
    }
  }
}

testXSSVulnerability();
